<project name="Helianthus.annuus" default="test">
	<property name="dist_parent_dir" value="dist" />
	<property name="build_dir" value="build" />
	<property name="tools_dir" value="tools" />
	<property name="key_file" value="key.pem" />
	<property name="dist_url" value="http://helianthus-annuus.googlecode.com/svn/dist" />

	<!--** test **-->
	<target name="test" depends="_build,_build_cont" />

	<!--** build **-->
	<target name="build" depends="_build,_minify,_build_cont" />

	<!--** beta **-->
	<target name="beta" depends="_beta, build, _dist">
		<copy file="src/version.js" tofile="${dist_parent_dir}/an.version.js" overwrite="true">
			<filterset>
				<filter token="AN_BETA" value="${AN_VERSION}" />
				<filter token="AN_STABLE" value="${AN_VERSION_STABLE}" />
			</filterset>
		</copy>

		<echo>Version: ${AN_VERSION}</echo>
	</target>

	<!--** stable **-->
	<target name="stable" depends="_stable, build, _dist">
		<!-- duplicate as beta -->
		<copy todir="${dist_parent_dir}/beta">
		 <fileset dir="${dist_parent_dir}/stable" includes="**/*" />
		</copy>

		<!-- version.js -->
		<copy file="src/version.js" tofile="${dist_parent_dir}/an.version.js" overwrite="true">
			<filterset>
				<filter token="AN_BETA" value="${AN_VERSION}" />
				<filter token="AN_STABLE" value="${AN_VERSION}" />
			</filterset>
		</copy>

		<!-- build.ini -->
		<propertyfile file="build.ini">
			<entry key="AN_VERSION_STABLE" value="${AN_VERSION}" />
			<entry key="RELEASE_VERSION" type="int" operation="+" value="1" />
		</propertyfile>

		<echo>Version: ${AN_VERSION}</echo>
	</target>

	<!--** internals **-->

	<tempfile property="header_file" destdir="${build_dir}" suffix=".js" deleteonexit="true" />
	<tempfile property="content_file" destdir="${build_dir}" suffix=".js" deleteonexit="true" />
	<tempfile property="temp_file" destdir="${build_dir}" suffix=".js" deleteonexit="true" />

	<target name="_build" depends="_beta">
		<propertyfile file="build.ini">
			<entry key="MAIN_VERSION" default="0.0" />
			<entry key="RELEASE_VERSION" default="0" />
			<entry key="BUILD_NUMBER" default="0" type="int" pattern="####" operation="+" />
		</propertyfile>

		<property file="build.ini" />

		<tstamp>
			<format property="BUILD_TIME" pattern="yyyy-MM-dd HH:mm:ss" />
		</tstamp>
		<property name="AN_VERSION" value="${MAIN_VERSION}.${RELEASE_VERSION}.${BUILD_NUMBER}" />

		<delete dir="${build_dir}" />
		<mkdir dir="${build_dir}" />

		<!-- header_file -->
		<concat destfile="${header_file}">
			<filterchain>
				<expandproperties />
			</filterchain>

			<fileset file="src/header.js" />
		</concat>

		<!-- CONTENT -->
		<concat destfile="${content_file}" fixlastline="true" encoding="UTF-8">
			<filelist dir="src/script">
				<file name="opera/opera9.js" />
				<file name="opera/rubbish.js" />
				<file name="kernel/lib/jquery.js" />
			</filelist>
			<fileset dir="src/script">
				<include name="kernel/**/*.js" />
				<include name="modules/**/*.js" />
				<exclude name="kernel/lib/jquery.js" />
			</fileset>
		</concat>

		<loadfile property="CONTENT" srcfile="${content_file}" encoding="UTF-8">
			<filterchain>
				<escapeunicode />
			</filterchain>
		</loadfile>

		<!-- annuus.js -->
		<copy file="src/script/annuus.js" todir="${build_dir}">
			<filterchain>
				<expandproperties />
				<concatfilter prepend="${header_file}" />
			</filterchain>
			<filterset begintoken="/*@" endtoken="@*/">
				<filter token="CONTENT" value="${CONTENT}" />
			</filterset>
		</copy>
	</target>

	<taskdef name="jscomp" classname="com.google.javascript.jscomp.ant.CompileTask" classpath="${tools_dir}/closurecompiler/compiler.jar" />
	<target name="_minify">
		<!-- annuus-raw.js -->
		<move file="${build_dir}/annuus.js" tofile="${build_dir}/annuus-raw.js" />

		<!-- annuus.js (minified) -->
		<jscomp compilationLevel="simple" warning="quiet" debug="false" output="${temp_file}">
			<sources dir="${build_dir}">
				<file name="annuus-raw.js"/>
			</sources>
		</jscomp>

		<copy file="${temp_file}" tofile="${build_dir}/annuus.js">
			<filterchain>
				<concatfilter prepend="${header_file}" />
			</filterchain>
		</copy>
	</target>

	<target name="_build_cont">
		<!-- annuus.user.js -->
		<exec executable="${tools_dir}/base64/base64.exe">
			<arg line="-e ${content_file} ${temp_file}" />
		</exec>

		<loadfile property="ENCODED_CONTENT" srcfile="${temp_file}">
			<filterchain>
				<striplinebreaks />
			</filterchain>
		</loadfile>

		<copy file="src/user/annuus.user.js" todir="${build_dir}/user">
			<filterchain>
				<expandproperties />
				<concatfilter prepend="${header_file}" />
			</filterchain>
		</copy>

		<!-- xpi -->
		<copy todir="${build_dir}/xpi">
			<fileset dir="src/xpi" />
		</copy>
		<copy file="${build_dir}/annuus.js" todir="${build_dir}/xpi/content/" />

		<copy file="src/xpi/install.rdf" todir="${build_dir}/xpi" overwrite="true">
			<filterchain>
				<expandproperties />
			</filterchain>
		</copy>

		<!-- m2f -->
		<copy file="${build_dir}/annuus.js" todir="${build_dir}/m2f/Helianthus.annuus/scripts" />

		<copy file="src/m2f/Helianthus.annuus.xml" todir="${build_dir}/m2f" overwrite="true">
			<filterchain>
				<expandproperties />
			</filterchain>
		</copy>

		<!-- crx -->
		<copy todir="${build_dir}/crx">
			<fileset dir="src/crx" />
			<fileset file="${build_dir}/annuus.js" />
		</copy>

		<copy file="src/crx/manifest.json" todir="${build_dir}/crx" overwrite="true">
			<filterchain>
				<expandproperties />
			</filterchain>
		</copy>

		<!-- privoxy -->
		<copy todir="${build_dir}/privoxy">
			<filterchain>
				<expandproperties />
			</filterchain>

			<fileset dir="src/privoxy" />
		</copy>
	</target>

	<target name="_dist">
		<delete dir="${dist_dir}" />
		<mkdir dir="${dist_dir}" />

		<!-- scripts -->
		<copy todir="${dist_dir}">
			<fileset dir="${build_dir}" includes="annuus.js" />
			<fileset dir="${build_dir}/user" includes="annuus.user.js" />
		</copy>

		<!-- crx -->
		<exec executable="cmd">
			<!-- http://github.com/Constellation/crxmake -->
			<arg value="/C crxmake --pack-extension=${build_dir}/crx --pack-extension-key=${key_file} --extension-out=${dist_dir}/annuus.crx" />
		</exec>

		<!-- xpi -->
		<mkdir dir="${build_dir}/xpi_package/chrome" />

		<zip destfile="${build_dir}/xpi_package/chrome/annuus.jar" basedir="${build_dir}/xpi" includes="content/,locale/,skin/" />
		<copy todir="${build_dir}/xpi_package">
			<fileset dir="${build_dir}/xpi" includes="*/" excludes="content/,locale/,skin/" />
		</copy>
		<replaceregexp file="${build_dir}/xpi_package/chrome.manifest" match=" (?=(?:content|locale|skin)/)" replace=" jar:chrome/annuus.jar!/" flags="g" />

		<zip destfile="${dist_dir}/annuus.xpi" basedir="${build_dir}/xpi_package" />

		<!-- m2f -->
		<zip destfile="${dist_dir}/annuus.m2f" basedir="${build_dir}/m2f" />

		<!-- privoxy -->
		<zip destfile="${dist_dir}/annuus.privoxy.zip" basedir="${build_dir}/privoxy" />
	</target>

	<target name="_stable">
		<property name="dist_dir" value="${dist_parent_dir}/stable" />
		<property name="AN_URL" value="${dist_url}/stable/annuus.js" />
	</target>

	<target name="_beta">
		<property name="dist_dir" value="${dist_parent_dir}/beta" />
		<property name="AN_URL" value="${dist_url}/beta/annuus.js" />
	</target>
</project>